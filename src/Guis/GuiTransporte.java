/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Guis;

import CrearTablas.CrearTablaTransporte;
import Transprte.CostoMinimo;
import Transprte.Datos;
import Transprte.EsquinaNO;
import Transprte.GuardarTransporte;
import Transprte.RssFeedCellRenderer;
import Transprte.Vogel;
import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Mipc
 */
public class GuiTransporte extends javax.swing.JFrame {
public static  int destinos = 0, origenes;
public static DefaultTableModel modeloRestricciones = null;
private DefaultTableModel modeloSolucion = null;
public static Datos datos[][];
CrearTablaTransporte ct =  new CrearTablaTransporte();
EsquinaNO NO ;
CostoMinimo minimo;
Vogel vogel;
public static int extraRow = 0; 
public static int extraColumn =0 ;
public boolean artificialFila = false, artificialColumna=false; 
double demanda = 0;
double oferta = 0;
public static boolean corte= true;
public static String repetidosNumeros;
boolean guardar;
GuardarTransporte guarda;

RssFeedCellRenderer Renderizar = new RssFeedCellRenderer();
    /**
     * Creates new form Principal2
     */
    public GuiTransporte() {
        initComponents();
        jtSolucion.setDefaultRenderer(Object.class, Renderizar);
        jtSolucion.setRowHeight(50);
        jtRestricciones.setRowHeight(25);
        jTable1.setRowHeight(22);
        destinos = Integer.parseInt(""+jspDestinos.getValue());
        origenes = Integer.parseInt(""+jspOrigen.getValue());
        new CrearTablaTransporte().crearTablaRestricciones(destinos, origenes, jtRestricciones,0);
        jDialog1.setBounds(this.getX()+(this.getWidth()/2)-(jDialog1.getWidth()/2), (this.getHeight()/2)-(jDialog1.getHeight()/2), jDialog1.getWidth(), jDialog1.getHeight());
        jFrame1.setBounds(this.getX()+(this.getWidth()/2)-(jFrame1.getWidth()/2), (this.getHeight()/2)-(jFrame1.getHeight()/2), jFrame1.getWidth(), jFrame1.getHeight());
        
        JTableHeader th; 
        th = jtRestricciones.getTableHeader(); 
        //Font fuente = new Font("Verdana", Font.ITALIC, 25); 
        th.setForeground(Color.red);
        //th.setFont(fuente);  

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRestricciones = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        info2 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jspOrigen = new javax.swing.JSpinner();
        jspDestinos = new javax.swing.JSpinner();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jcbMeto = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jDialog2 = new javax.swing.JDialog();
        jFileChooser2 = new javax.swing.JFileChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtSolucion = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfResultado = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jFrame1.setTitle("Coeficientes");
        jFrame1.setMinimumSize(new java.awt.Dimension(680, 610));
        jFrame1.setResizable(false);
        jFrame1.setState(100000);
        jFrame1.getContentPane().setLayout(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Coeficientes del Problema", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel3.setLayout(null);

        jtRestricciones.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtRestricciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Origen 1", null, null, null},
                {"Origen 2", null, null, null},
                {"Demanda", null, null, null}
            },
            new String [] {
                "", "Destino 1", "Destino 2", "Oferta"
            }
        ));
        jtRestricciones.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtRestricciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtRestriccionesFocusGained(evt);
            }
        });
        jtRestricciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtRestriccionesMousePressed(evt);
            }
        });
        jtRestricciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtRestriccionesKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jtRestricciones);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(16, 30, 610, 350);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/writing62.png"))); // NOI18N
        jButton2.setText("Terminar ");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton2MouseReleased(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(447, 390, 180, 40);

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jCheckBox1MousePressed(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox1);
        jCheckBox1.setBounds(16, 398, 20, 31);

        info2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        info2.setOpaque(true);
        jPanel3.add(info2);
        info2.setBounds(138, 402, 290, 22);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator3);
        jSeparator3.setBounds(130, 402, 12, 20);

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel3.add(jSeparator4);
        jSeparator4.setBounds(432, 402, 12, 20);

        jFrame1.getContentPane().add(jPanel3);
        jPanel3.setBounds(10, 118, 650, 450);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel8.setLayout(null);

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(null);

        jspOrigen.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jspOrigen.setModel(new javax.swing.SpinnerNumberModel(2, 1, 400, 1));
        jspOrigen.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspOrigenStateChanged(evt);
            }
        });
        jPanel5.add(jspOrigen);
        jspOrigen.setBounds(80, 50, 80, 28);

        jspDestinos.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jspDestinos.setModel(new javax.swing.SpinnerNumberModel(2, 2, 350, 1));
        jPanel5.add(jspDestinos);
        jspDestinos.setBounds(80, 10, 80, 28);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton3);
        jButton3.setBounds(170, 50, 60, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Origen");
        jPanel5.add(jLabel4);
        jLabel4.setBounds(10, 50, 110, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Destino");
        jPanel5.add(jLabel6);
        jLabel6.setBounds(10, 10, 130, 30);

        jPanel8.add(jPanel5);
        jPanel5.setBounds(300, 10, 260, 80);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(null);

        jcbMeto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcbMeto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Costo Mínimo", "Esquina Noroeste", "Vogel" }));
        jcbMeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMetoActionPerformed(evt);
            }
        });
        jPanel1.add(jcbMeto);
        jcbMeto.setBounds(20, 40, 210, 34);

        jLabel7.setText("Seleccione metodo:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(30, 20, 140, 16);

        jPanel8.add(jPanel1);
        jPanel1.setBounds(20, 10, 260, 80);

        jFrame1.getContentPane().add(jPanel8);
        jPanel8.setBounds(10, 10, 580, 100);

        jDialog1.setMinimumSize(new java.awt.Dimension(260, 270));
        jDialog1.setResizable(false);
        jDialog1.getContentPane().setLayout(null);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));
        jPanel6.setLayout(null);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Origen");
        jPanel6.add(jRadioButton1);
        jRadioButton1.setBounds(20, 30, 80, 23);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Destino");
        jPanel6.add(jRadioButton2);
        jRadioButton2.setBounds(110, 30, 93, 20);

        jLabel3.setText("Posicion ");
        jPanel6.add(jLabel3);
        jLabel3.setBounds(30, 90, 80, 16);

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        jPanel6.add(jTextField2);
        jTextField2.setBounds(90, 80, 100, 30);
        jPanel6.add(jSeparator1);
        jSeparator1.setBounds(10, 62, 210, 10);

        jButton6.setText("Analizar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton6);
        jButton6.setBounds(70, 130, 100, 40);

        jDialog1.getContentPane().add(jPanel6);
        jPanel6.setBounds(10, 10, 230, 200);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("34343");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDialog1.getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 210, 230, 20);

        jDialog2.setTitle("Abrir");
        jDialog2.setMinimumSize(new java.awt.Dimension(643, 419));
        jDialog2.getContentPane().setLayout(new javax.swing.BoxLayout(jDialog2.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jFileChooser2.setFileFilter(null);
        jFileChooser2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser2ActionPerformed(evt);
            }
        });
        jDialog2.getContentPane().add(jFileChooser2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transporte ");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jtSolucion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtSolucion.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtSolucion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane3.setViewportView(jtSolucion);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(350, 10, 750, 450);

        jPanel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/pen67.png"))); // NOI18N
        jButton1.setText("Ingresar tarea");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1);
        jButton1.setBounds(600, 10, 230, 50);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/play109.png"))); // NOI18N
        jButton4.setText("Resolver Paso a paso");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton4);
        jButton4.setBounds(270, 10, 290, 50);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logotype171.png"))); // NOI18N
        jButton5.setText("Resolver todo");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton5);
        jButton5.setBounds(10, 10, 240, 50);

        getContentPane().add(jPanel7);
        jPanel7.setBounds(240, 480, 840, 70);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Z =");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(40, 30, 30, 30);

        jtfResultado.setBackground(new java.awt.Color(255, 255, 255));
        jtfResultado.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jtfResultado.setOpaque(true);
        jPanel2.add(jtfResultado);
        jtfResultado.setBounds(80, 30, 210, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Origen", "Destino", "Matriales", "Precio", "Sub Total"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(jTable1);

        jPanel2.add(jScrollPane4);
        jScrollPane4.setBounds(10, 80, 290, 360);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 10, 310, 450);

        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 560, 430, 20);

        jMenu1.setText("File");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inicio.png"))); // NOI18N
        jMenuItem2.setText("Inicio");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(1102, 650));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtRestriccionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRestriccionesFocusGained

    }//GEN-LAST:event_jtRestriccionesFocusGained

    private void jtRestriccionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtRestriccionesMousePressed
        
    }//GEN-LAST:event_jtRestriccionesMousePressed

    private void jtRestriccionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtRestriccionesKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '-' && c != 'E' && c != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_jtRestriccionesKeyTyped

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        info2.setText(" Procesando…"); 
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    boolean resp = equilibarSistema();
    if(isNumeric(jtRestricciones)&& resp){
      destinos = Integer.parseInt(""+jspDestinos.getValue());
      origenes = Integer.parseInt(""+jspOrigen.getValue()); 
      ct.CrearTablaSolucion(jtRestricciones, jtSolucion,extraRow,extraColumn);
      
      
      if(jcbMeto.getSelectedIndex()==1){
        NO = new EsquinaNO(); 
        NO.calcularDemandaOfretTotal(jtSolucion, 0, 0);
      }
      else if(jcbMeto.getSelectedIndex()==0){
          minimo = new CostoMinimo();          
      
      }
      else  if(jcbMeto.getSelectedIndex()==2){         
          vogel = new Vogel();
          vogel. calcularmenoresColumnas(jtSolucion);
          vogel.calcularSumaMenoresFilas(jtSolucion);
          vogel.buscarMayorFilaColumna(jtSolucion);
      
      }
     
      jButton4.setEnabled(true);   
      jButton5.setEnabled(true);
      jFrame1.setVisible(false);
             
    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MousePressed
        info2.setText(" Procesando…"); // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1MousePressed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

       
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jspOrigenStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspOrigenStateChanged
        int fi = Integer.parseInt(jspOrigen.getValue().toString());
         info2.setText(null);
        String g[] = new String[destinos];
        if (fi > origenes) {
            for (int i = origenes + 1; i <= fi; i++) {
                g[0] = "Demanda " + i;
                modeloRestricciones.addRow(g);
                String tem;
                for (int j = 0; j < modeloRestricciones.getColumnCount(); j++) {
                    tem = ""+modeloRestricciones.getValueAt(modeloRestricciones.getRowCount()-2, j);
                    if(!tem.equals("null"))modeloRestricciones.setValueAt(tem, modeloRestricciones.getRowCount()-1, j);
                    modeloRestricciones.setValueAt("", modeloRestricciones.getRowCount()-2, j);
                    
                }
                modeloRestricciones.setValueAt("Origen "+i, modeloRestricciones.getRowCount()-2, 0);
                modeloRestricciones.setValueAt("", modeloRestricciones.getRowCount()-1, modeloRestricciones.getColumnCount()-1);
            }
            origenes = fi;
        } else if (fi < origenes) {
            while (origenes != fi) {
                modeloRestricciones.removeRow(origenes-1);
                origenes--;
            }
        }
        jCheckBox1ActionPerformed(null);
    }//GEN-LAST:event_jspOrigenStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      destinos = Integer.parseInt(""+jspDestinos.getValue());
      origenes = Integer.parseInt(""+jspOrigen.getValue());
      new CrearTablaTransporte().crearTablaRestricciones(destinos, origenes, jtRestricciones,0); 
    //  jckbPlanta.setSelected(false);
    //  jckbDestino.setSelected(false);
      artificialColumna= false;
      artificialFila = false;
      info2.setBackground(new Color(240,240,240));
       info2.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      jFrame1.setVisible(true);
      
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      if(jcbMeto.getSelectedIndex()==1){
         if(NO.noroeste(jtSolucion, modeloSolucion)){
             jLabel1.setText(" Fin del proceso");
             enviar();
              jButton4.setEnabled(false);
         }
          jtSolucion.setValueAt("", 0,0);
      }
       if(jcbMeto.getSelectedIndex()==0){         
          if(minimo.costoMinimo(jtSolucion)){
              jLabel1.setText(" Fin del proceso");
              enviar();
              jButton4.setEnabled(false);
          }
          jtSolucion.setValueAt("", 0,0);
      
      }
       if(jcbMeto.getSelectedIndex()==2){  
          if(vogel.calcularVogel(jtSolucion)){
              vogel.calcularVogel(jtSolucion);
              jLabel1.setText(" Fin del proceso");
              enviar();
          
          }
           jtSolucion.setValueAt("", 0,0);
      }
       jtfResultado.setText(""+calularTotal());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       boolean fin = false;
       corte = false;
        while(!fin){
            if(jcbMeto.getSelectedIndex()==1){
         if(NO.noroeste(jtSolucion, modeloSolucion)){
             jLabel1.setText(" Fin del proceso");
             enviar();
              jButton4.setEnabled(false);
              jButton5.setEnabled(false);
              fin = true;
         }
      }
       if(jcbMeto.getSelectedIndex()==0){         
          if(minimo.costoMinimo(jtSolucion)){
              jLabel1.setText(" Fin del proceso");
              enviar();
              jButton4.setEnabled(false);
              jButton5.setEnabled(false);
              fin = true;
          }
          jtSolucion.setValueAt("", 0,0);
      
      }
       if(jcbMeto.getSelectedIndex()==2){         
          vogel.calcularmenoresColumnas(jtSolucion);
          vogel.calcularSumaMenoresFilas(jtSolucion);
          vogel.buscarMayorFilaColumna(jtSolucion);
          if(vogel.getFilaMayor() >= 0 && vogel.getColumnaMayor()>= 0){
             vogel.buscarCostoMenor();
             vogel.agr(jtSolucion);
          }
          else{
              fin = true;
              enviar();
              jLabel1.setText(" Fin del proceso");
              jButton4.setEnabled(false);
              jButton5.setEnabled(false);
          }
      }   
      
      }
        jtfResultado.setText(""+calularTotal());

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseReleased
       // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseReleased

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jcbMetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMetoActionPerformed
        repetidosNumeros =null;
        if(jcbMeto.getSelectedIndex()==0 || jcbMeto.getSelectedIndex()==1){
            extraRow =0 ;
             extraColumn =0 ;
            
        }
        else{
           extraRow =1 ;
           extraColumn=1; 
        }
        
        info2.setBackground(new Color(240,240,240));
         info2.setText(null);
         jButton4.setEnabled(false);
         jButton5.setEnabled(false);
    }//GEN-LAST:event_jcbMetoActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      
       int f = jtSolucion.getRowCount();
       int c = jtSolucion.getColumnCount();
        if(!jTextField2.getText().isEmpty()) { 
            int p = Integer.parseInt(jTextField2.getText());
            if(jRadioButton1.isSelected()){
                if(p>0 && p<f- 2){
                    if(vogel.existe(p, c-1, jtSolucion)){
                       vogel.setFilaMayor(p);
                       vogel.setBuscarPorColumna(false);
                       vogel.buscarCostoMenor();
                       vogel.agr(jtSolucion);
                       jDialog1.setVisible(false);
                       jtSolucion.setValueAt("", 0,0);
                    } else  jLabel5.setText("Seleccion Incorrecta ");
                }else  jLabel5.setText("Posición Incorrecta");
            }
           else if(jRadioButton2.isSelected()){
                if(p>0 && p<c- 2){
                    if(vogel.existe(f-1, p, jtSolucion)){
                       vogel.setColumnaMayor(p);
                       vogel.setBuscarPorColumna(true);
                       vogel.buscarCostoMenor();
                       vogel.agr(jtSolucion);
                       jDialog1.setVisible(false);
                       jtSolucion.setValueAt("", 0,0);
                    }else  jLabel5.setText("Seleccion Incorrecta ");
                }
                else  jLabel5.setText("Posición Incorrecta");
            }

          }else jLabel5.setText("Ingrese una Posición");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
       char c = evt.getKeyChar();
       if(!Character.isDigit(c))
           evt.consume();
       jLabel5.setText(null);
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       new GuiInicio().setVisible(true); 
       this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jFileChooser2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser2ActionPerformed
        String ruta;
        guarda = new GuardarTransporte(""+jcbMeto.getSelectedItem(), artificialFila, artificialColumna);
        JFileChooser seChooser = (JFileChooser) evt.getSource();
        String comando = evt.getActionCommand();
        if (comando.equals(JFileChooser.APPROVE_SELECTION)) {
            File archivoSelecciondo = seChooser.getSelectedFile();
            ruta = archivoSelecciondo.getAbsolutePath();
            if (!guardar) {
               guarda.guardarArchivo(ruta, ruta, guarda);
            } else {
                //guardarArchivo(ruta, archivoSelecciondo.getName());
            }
        }
        else jDialog1.dispose();
    }//GEN-LAST:event_jFileChooser2ActionPerformed
    
    public boolean equilibarSistema(){
        info2.setBackground(new Color(253,177,177));
        if(artificialColumna){
           calcularDemandaOfretTotal(jtRestricciones, 0, 1);
//           modeloRestricciones.setValueAt((oferta-demanda), modeloRestricciones.getRowCount()-1, modeloRestricciones.getColumnCount()-2);
           
       }
       else if (artificialFila){
           calcularDemandaOfretTotal(jtRestricciones, 1, 0);
//           modeloRestricciones.setValueAt((oferta-demanda), modeloRestricciones.getRowCount()-2, modeloRestricciones.getColumnCount()-1);
       }
       else calcularDemandaOfretTotal(jtRestricciones, 0, 0);    
       
        if(oferta == demanda){
            if(artificialFila){
                info2.setText("Planta Artificial innecesaria");
                return false;
            }
            else if(artificialColumna){
              info2.setText("Destino Artificial innecesario");
               return false;
            }
        }
        else if(oferta!= demanda){
            if(oferta>demanda && artificialFila){
                info2.setText("Sistema Mal equilibrado");
                return false;
            }
            else  if(oferta<demanda && artificialColumna){
                info2.setText("Sistema Mal equilibrado");
                return false;
            }
            
        }
        if(!artificialColumna && !artificialFila){
            if(oferta<demanda){
                info2.setText("La Oferta No Satisface la demanda");
                 return false;
            }
            else  if(oferta>demanda){
               info2.setText("La Demanda No Satisface la oferta");
               return false;
            }
        }
        info2.setBackground(new  Color(240,240,240));
        return true;
     
    }
    void eliminaFila(){
        artificialFila = false; 
        modeloRestricciones.removeRow(modeloRestricciones.getRowCount()-2); 
    }
    void agregarColumna(){
            artificialColumna = true; 
            modeloRestricciones.addColumn("Oferta");
            renombrarColumn("Ficticio", jtRestricciones);
            trasladorDatos(jtRestricciones);
             modeloRestricciones.setValueAt((oferta-demanda), modeloRestricciones.getRowCount()-1, modeloRestricciones.getColumnCount()-2);
    }
    void eliminarColumna(){
            artificialColumna=false;
            String tem[][] = extrar(jtRestricciones, 1);
            new CrearTablaTransporte().crearTablaRestricciones(destinos, origenes, jtRestricciones,0); 
            for (int i = 0; i < tem.length; i++) {
                for (int j = 1; j < tem[i].length; j++) {
                    modeloRestricciones.setValueAt(tem[i][j], i, j);
                }
            } 
    }
    void agregarFila(){
            artificialFila= true;
            String temp;            
            modeloRestricciones.addRow(new String[]{"Demanda"});
            int p = modeloRestricciones.getRowCount();
            for (int i = 0; i < modeloRestricciones.getColumnCount(); i++) {
                temp =""+modeloRestricciones.getValueAt(p-2, i);
                if(String.valueOf(modeloRestricciones.getValueAt(p-2, i)).equalsIgnoreCase("null"))
                     temp="";
                modeloRestricciones.setValueAt(temp ,p-1, i);
                if(i==0)modeloRestricciones.setValueAt("Ficticio", p-2, i);
                else modeloRestricciones.setValueAt("0", p-2, i);
            }
            
             modeloRestricciones.setValueAt((demanda-oferta), modeloRestricciones.getRowCount()-2, modeloRestricciones.getColumnCount()-1);
    }
    public void renombrarColumn(String nom, JTable t){
            JTableHeader th=t.getTableHeader();
            TableColumnModel tcm=th.getColumnModel();
            TableColumn tc=tcm.getColumn(t.getColumnCount()-2);
            tc.setHeaderValue("Ficticio");
            th.repaint(); 
    }
    public void trasladorDatos(JTable t){
        for (int f = 0; f < t.getRowCount()-1; f++) {
            t.setValueAt(t.getValueAt(f, t.getColumnCount()-2), f,  t.getColumnCount()-1);
            t.setValueAt(0, f, t.getColumnCount()-2);
        }
    }
    public String[][] extrar(JTable t, int c){
        String tem[][] = new String[t.getRowCount()][t.getColumnCount()-c];
        for (int i = 0; i < t.getRowCount(); i++) {
            for (int j = 0; j < t.getColumnCount()-2; j++) {
                if(String.valueOf(t.getValueAt(i, j)).equalsIgnoreCase("null"))
                     tem[i][j]="";
                else tem[i][j]=""+t.getValueAt(i, j);
            }
        }
        int p = t.getColumnCount();
        for (int i = 0; i < t.getRowCount()-1; i++) {
           if(String.valueOf(t.getValueAt(i, p-1)).equalsIgnoreCase("null"))
                tem[i][p-c-1]="";
           else tem[i][p-c-1]=""+t.getValueAt(i, p-1);            
        }
        return tem;
    }
    public void calcularDemandaOfretTotal(JTable tableSolucion, int extraf, int extraC){
       demanda=0;
       oferta=0;
        for (int i = 1; i < jtRestricciones.getColumnCount()-1-extraC; i++) {
            try{
                demanda = demanda + Double.parseDouble(""+jtRestricciones.getValueAt(jtRestricciones.getRowCount()-1, i));
            }catch( Exception r){}
        }
        for (int i = 0; i < jtRestricciones.getRowCount()-1-extraf; i++) {
            try{
             oferta = oferta+ Double.parseDouble(""+jtRestricciones.getValueAt(i,jtRestricciones.getColumnCount()-1));
            }catch(Exception e){}
        }
  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiTransporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiTransporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiTransporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiTransporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiTransporte().setVisible(true);
            }
        });
    }
    
    private boolean isNumeric(JTable t ){
        
        for (int i = 0; i <t.getRowCount() ; i++) {
            for (int j = 1; j < t.getColumnCount(); j++) {
                try {
                  if(i== t.getRowCount()-1 && j==t.getColumnCount()-1 ) return true;
                          if(i==t.getRowCount()-1 || j==t.getColumnCount()-1 ){
                              Double.parseDouble(""+t.getValueAt(i, j));
                              
                          }
                          else if(!"-".equals(""+t.getValueAt(i, j))){
                              Double.parseDouble(""+t.getValueAt(i, j));
                          }
                          
                             
                  
                } catch (NumberFormatException nfe){
                    info2.setText("Dato Incorrecto ' "+t.getValueAt(i, j)+" '");
                    info2.setBackground(new Color(253,177,177));
                     return false;
                }
            }
        }
    return true;
	
}
  public void enviar(){
      Object[] cabeza = {"Origen","Destino","Material","Precio","Sub Total"};
      DefaultTableModel mode = new DefaultTableModel(cabeza,0){
           public boolean isCellEditable(int row, int column) {                   
               return false;
           }
         };
      String row[] = new String[5];
      for (int i = 0; i < datos.length; i++) {
          for (int j = 0; j < datos[0].length; j++) {
              if(datos[i][j].getCantidad()>0D){
                  row[0]= ""+(i+1); 
                  row[1]= ""+(j+1); 
                  row[2]= ""+datos[i][j].getCantidad();
                  row[3]= ""+datos[i][j].getPrecio();
                  row[4]= ""+datos[i][j].getCantidad()*Double.parseDouble(datos[i][j].getPrecio());
                  mode.addRow(row);                  
              }
          }
      }
      jTable1.setModel(mode);
  }
 double calularTotal(){
     double total=0;
     for (int i = 0; i < datos.length; i++) {
         for (int j = 0; j < datos[i].length; j++) {
             if(!datos[i][j].getPrecio().equalsIgnoreCase("-")){
                 total = total + Double.parseDouble(datos[i][j].getPrecio())*datos[i][j].getCantidad();
             }
         }
     }
     
     return total;
 }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel info2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    public static javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox jcbMeto;
    private javax.swing.JSpinner jspDestinos;
    private javax.swing.JSpinner jspOrigen;
    private javax.swing.JTable jtRestricciones;
    private javax.swing.JTable jtSolucion;
    private javax.swing.JLabel jtfResultado;
    // End of variables declaration//GEN-END:variables
}
